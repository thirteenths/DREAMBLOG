import { Expressions } from "./expressions";
import { ReflectingProxyInjectorFactory } from "./reflecting-proxy.injector-factory";
import { ExpressionReflector, IExpression } from "./expression-reflector";
/**
 * This class reflects an expression to an expression tree representation.
 * async/await is not supported.
 *
 * For more examples check
 * [unit tests for this class]
 * (https://github.com/dvabuzyarov/moq.ts/blob/master/projects/moq/src/lib/reflector/full.expression-reflector.spec.ts)
 */
export declare class SyncExpressionReflector implements ExpressionReflector {
    private readonly injectorFactory;
    constructor(injectorFactory: ReflectingProxyInjectorFactory);
    /**
     * Reflects the provided code as an expression tree.
     */
    reflect<T>(expression: IExpression<T>): Expressions<T>[];
    reflectAsync<T>(expression: IExpression<T>): Promise<Expressions<T>[]>;
}
