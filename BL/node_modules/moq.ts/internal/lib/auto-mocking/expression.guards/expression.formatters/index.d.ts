import { ComplexExpressionErrorFormatter } from "./complex-expression.error-formatter";
import { NamePrefixProvider } from "../../name-formatters/name-prefix.provider";
import { ExpressionFormatter } from "./expression.formatter";
import { FunctionFormatter } from "../../../formatters/function.formatter";
import { MethodFormatter } from "../../../formatters/method.formatter";
import { ConstantFormatter } from "../../../formatters/constant.formatter";
import { StringErrorStyler } from "./string.error-styler";
declare const _default: ({
    provide: typeof ComplexExpressionErrorFormatter;
    useClass: typeof ComplexExpressionErrorFormatter;
    deps: (import("../../../static.injector/injection_token").InjectionToken<import("../../../moq").IMockOptions<any>> | typeof NamePrefixProvider | typeof ExpressionFormatter | typeof StringErrorStyler)[];
} | {
    provide: typeof ExpressionFormatter;
    useClass: typeof ExpressionFormatter;
    deps: (typeof ConstantFormatter | typeof FunctionFormatter | typeof MethodFormatter)[];
} | {
    provide: typeof StringErrorStyler;
    useClass: typeof StringErrorStyler;
    deps: any[];
})[];
export default _default;
