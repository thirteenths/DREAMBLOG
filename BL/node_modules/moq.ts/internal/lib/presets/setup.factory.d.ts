import { IPresetBuilder } from "../moq";
import { Expressions } from "../reflector/expressions";
import { PresetBuilderFactory } from "./preset-builder.factory";
import { TypeOfInjectionFactory } from "../injector/injection-factory";
import { AutoMockProvider } from "../auto-mocking/auto-mock.provider";
import { ComplexExpressionGuard } from "../auto-mocking/expression.guards/complex-expression.guard";
/**
 * @Hidden
 */
export declare class SetupFactory<T> {
    private readonly presetBuilderFactory;
    private readonly autoMockProvider;
    private readonly expressionGuard;
    constructor(presetBuilderFactory: TypeOfInjectionFactory<PresetBuilderFactory<T>>, autoMockProvider: AutoMockProvider, expressionGuard: ComplexExpressionGuard);
    create<R = unknown>([shallow, ...rest]: Expressions<T>[]): IPresetBuilder<T, R>;
}
