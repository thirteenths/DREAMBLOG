import { EXPRESSION_REFLECTOR } from "./expression-reflector";
import { ReflectingProxyInjectorFactory } from "./reflecting-proxy.injector-factory";
import { SyncExpressionReflector } from "./sync-expression.reflector";
import { CompositeExpressionReflector } from "./composite-expression.reflector";
import { AsyncExpressionDetector } from "./async-expression.detector";
import { AsyncExpressionReflector } from "./async-expression.reflector";
import { AsyncReflectingProxyInjectorFactory } from "./async-reflecting-proxy.injector-factory";
/**
 * @hidden
 */
export default [
    { provide: EXPRESSION_REFLECTOR, useExisting: CompositeExpressionReflector, deps: [] },
    {
        provide: CompositeExpressionReflector,
        useClass: CompositeExpressionReflector,
        deps: [AsyncExpressionDetector, SyncExpressionReflector, AsyncExpressionReflector]
    },
    { provide: AsyncExpressionDetector, useClass: AsyncExpressionDetector, deps: [] },
    { provide: ReflectingProxyInjectorFactory, useClass: ReflectingProxyInjectorFactory, deps: [] },
    { provide: SyncExpressionReflector, useClass: SyncExpressionReflector, deps: [ReflectingProxyInjectorFactory] },
    {
        provide: AsyncReflectingProxyInjectorFactory,
        useClass: AsyncReflectingProxyInjectorFactory,
        deps: [ReflectingProxyInjectorFactory]
    },
    {
        provide: AsyncExpressionReflector,
        useClass: AsyncExpressionReflector,
        deps: [AsyncReflectingProxyInjectorFactory]
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjL2xpYi9yZWZsZWN0b3IvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDOUQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFaEc7O0dBRUc7QUFDSCxlQUFlO0lBQ1gsRUFBQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsV0FBVyxFQUFFLDRCQUE0QixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUM7SUFDcEY7UUFDSSxPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLFFBQVEsRUFBRSw0QkFBNEI7UUFDdEMsSUFBSSxFQUFFLENBQUMsdUJBQXVCLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLENBQUM7S0FDckY7SUFDRCxFQUFDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBQztJQUMvRSxFQUFDLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxRQUFRLEVBQUUsOEJBQThCLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBQztJQUM3RixFQUFDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxFQUFFLENBQUMsOEJBQThCLENBQUMsRUFBQztJQUM3RztRQUNJLE9BQU8sRUFBRSxtQ0FBbUM7UUFDNUMsUUFBUSxFQUFFLG1DQUFtQztRQUM3QyxJQUFJLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztLQUN6QztJQUNEO1FBQ0ksT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxRQUFRLEVBQUUsd0JBQXdCO1FBQ2xDLElBQUksRUFBRSxDQUFDLG1DQUFtQyxDQUFDO0tBQzlDO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVYUFJFU1NJT05fUkVGTEVDVE9SIH0gZnJvbSBcIi4vZXhwcmVzc2lvbi1yZWZsZWN0b3JcIjtcbmltcG9ydCB7IFJlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeSB9IGZyb20gXCIuL3JlZmxlY3RpbmctcHJveHkuaW5qZWN0b3ItZmFjdG9yeVwiO1xuaW1wb3J0IHsgU3luY0V4cHJlc3Npb25SZWZsZWN0b3IgfSBmcm9tIFwiLi9zeW5jLWV4cHJlc3Npb24ucmVmbGVjdG9yXCI7XG5pbXBvcnQgeyBDb21wb3NpdGVFeHByZXNzaW9uUmVmbGVjdG9yIH0gZnJvbSBcIi4vY29tcG9zaXRlLWV4cHJlc3Npb24ucmVmbGVjdG9yXCI7XG5pbXBvcnQgeyBBc3luY0V4cHJlc3Npb25EZXRlY3RvciB9IGZyb20gXCIuL2FzeW5jLWV4cHJlc3Npb24uZGV0ZWN0b3JcIjtcbmltcG9ydCB7IEFzeW5jRXhwcmVzc2lvblJlZmxlY3RvciB9IGZyb20gXCIuL2FzeW5jLWV4cHJlc3Npb24ucmVmbGVjdG9yXCI7XG5pbXBvcnQgeyBBc3luY1JlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeSB9IGZyb20gXCIuL2FzeW5jLXJlZmxlY3RpbmctcHJveHkuaW5qZWN0b3ItZmFjdG9yeVwiO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgW1xuICAgIHtwcm92aWRlOiBFWFBSRVNTSU9OX1JFRkxFQ1RPUiwgdXNlRXhpc3Rpbmc6IENvbXBvc2l0ZUV4cHJlc3Npb25SZWZsZWN0b3IsIGRlcHM6IFtdfSxcbiAgICB7XG4gICAgICAgIHByb3ZpZGU6IENvbXBvc2l0ZUV4cHJlc3Npb25SZWZsZWN0b3IsXG4gICAgICAgIHVzZUNsYXNzOiBDb21wb3NpdGVFeHByZXNzaW9uUmVmbGVjdG9yLFxuICAgICAgICBkZXBzOiBbQXN5bmNFeHByZXNzaW9uRGV0ZWN0b3IsIFN5bmNFeHByZXNzaW9uUmVmbGVjdG9yLCBBc3luY0V4cHJlc3Npb25SZWZsZWN0b3JdXG4gICAgfSxcbiAgICB7cHJvdmlkZTogQXN5bmNFeHByZXNzaW9uRGV0ZWN0b3IsIHVzZUNsYXNzOiBBc3luY0V4cHJlc3Npb25EZXRlY3RvciwgZGVwczogW119LFxuICAgIHtwcm92aWRlOiBSZWZsZWN0aW5nUHJveHlJbmplY3RvckZhY3RvcnksIHVzZUNsYXNzOiBSZWZsZWN0aW5nUHJveHlJbmplY3RvckZhY3RvcnksIGRlcHM6IFtdfSxcbiAgICB7cHJvdmlkZTogU3luY0V4cHJlc3Npb25SZWZsZWN0b3IsIHVzZUNsYXNzOiBTeW5jRXhwcmVzc2lvblJlZmxlY3RvciwgZGVwczogW1JlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeV19LFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogQXN5bmNSZWZsZWN0aW5nUHJveHlJbmplY3RvckZhY3RvcnksXG4gICAgICAgIHVzZUNsYXNzOiBBc3luY1JlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeSxcbiAgICAgICAgZGVwczogW1JlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeV1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgcHJvdmlkZTogQXN5bmNFeHByZXNzaW9uUmVmbGVjdG9yLFxuICAgICAgICB1c2VDbGFzczogQXN5bmNFeHByZXNzaW9uUmVmbGVjdG9yLFxuICAgICAgICBkZXBzOiBbQXN5bmNSZWZsZWN0aW5nUHJveHlJbmplY3RvckZhY3RvcnldXG4gICAgfSxcbl07XG4iXX0=