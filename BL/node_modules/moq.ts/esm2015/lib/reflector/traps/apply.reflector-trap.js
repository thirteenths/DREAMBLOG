import { GetPropertyExpression, FunctionExpression, MethodExpression } from "../expressions";
export class ApplyReflectorTrap {
    constructor(returnValueFactory, expressions) {
        this.returnValueFactory = returnValueFactory;
        this.expressions = expressions;
        return this.factory();
    }
    factory() {
        return (target, thisArg, args) => {
            const last = this.expressions.pop();
            if (last instanceof GetPropertyExpression) {
                this.expressions.push(new MethodExpression(last.name, args));
            }
            else {
                if (last !== undefined) {
                    this.expressions.push(last);
                }
                this.expressions.push(new FunctionExpression(args));
            }
            return this.returnValueFactory.create();
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbHkucmVmbGVjdG9yLXRyYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjL2xpYi9yZWZsZWN0b3IvdHJhcHMvYXBwbHkucmVmbGVjdG9yLXRyYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0YsTUFBTSxPQUFPLGtCQUFrQjtJQUMzQixZQUNxQixrQkFBdUMsRUFDdkMsV0FBbUM7UUFEbkMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFxQjtRQUN2QyxnQkFBVyxHQUFYLFdBQVcsQ0FBd0I7UUFDcEQsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFTLENBQUM7SUFDakMsQ0FBQztJQUVELE9BQU87UUFDSCxPQUFPLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUM3QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ3BDLElBQUksSUFBSSxZQUFZLHFCQUFxQixFQUFFO2dCQUN2QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUNoRTtpQkFBTTtnQkFDSCxJQUFJLElBQUksS0FBSyxTQUFTLEVBQUU7b0JBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUMvQjtnQkFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDdkQ7WUFDRCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM1QyxDQUFDLENBQUM7SUFDTixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHByZXNzaW9ucyB9IGZyb20gXCIuLi9leHByZXNzaW9uc1wiO1xuaW1wb3J0IHsgSW5qZWN0aW9uRmFjdG9yeSB9IGZyb20gXCIuLi8uLi9pbmplY3Rvci9pbmplY3Rpb24tZmFjdG9yeVwiO1xuaW1wb3J0IHsgSVJldHVyblZhbHVlRmFjdG9yeSB9IGZyb20gXCIuLi9leHByZXNzaW9uLXJlZmxlY3RvclwiO1xuaW1wb3J0IHsgR2V0UHJvcGVydHlFeHByZXNzaW9uLCBGdW5jdGlvbkV4cHJlc3Npb24sIE1ldGhvZEV4cHJlc3Npb24gfSBmcm9tIFwiLi4vZXhwcmVzc2lvbnNcIjtcblxuZXhwb3J0IGNsYXNzIEFwcGx5UmVmbGVjdG9yVHJhcCBpbXBsZW1lbnRzIEluamVjdGlvbkZhY3Rvcnkge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHJldHVyblZhbHVlRmFjdG9yeTogSVJldHVyblZhbHVlRmFjdG9yeSxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBleHByZXNzaW9uczogRXhwcmVzc2lvbnM8dW5rbm93bj5bXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5mYWN0b3J5KCkgYXMgYW55O1xuICAgIH1cblxuICAgIGZhY3RvcnkoKSB7XG4gICAgICAgIHJldHVybiAodGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBsYXN0ID0gdGhpcy5leHByZXNzaW9ucy5wb3AoKTtcbiAgICAgICAgICAgIGlmIChsYXN0IGluc3RhbmNlb2YgR2V0UHJvcGVydHlFeHByZXNzaW9uKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leHByZXNzaW9ucy5wdXNoKG5ldyBNZXRob2RFeHByZXNzaW9uKGxhc3QubmFtZSwgYXJncykpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAobGFzdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwcmVzc2lvbnMucHVzaChsYXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5leHByZXNzaW9ucy5wdXNoKG5ldyBGdW5jdGlvbkV4cHJlc3Npb24oYXJncykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV0dXJuVmFsdWVGYWN0b3J5LmNyZWF0ZSgpO1xuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==