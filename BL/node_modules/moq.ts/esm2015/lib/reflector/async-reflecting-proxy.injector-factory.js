import { Injector } from "../static.injector/injector";
import { APPLY_RETURN_VALUE, CONSTRUCT_RETURN_VALUE, EXPRESSIONS, GET_RETURN_VALUE } from "./expression-reflector";
import { MethodOnlyReflectingProxyFactory } from "./method-only-reflecting-proxy.factory";
import { MethodReflectorTrap } from "./traps/method.reflector-trap";
export class AsyncReflectingProxyInjectorFactory {
    constructor(reflectingProxyInjectorFactory) {
        this.reflectingProxyInjectorFactory = reflectingProxyInjectorFactory;
    }
    create(options = { providers: [] }) {
        const providers = [
            { provide: GET_RETURN_VALUE, useExisting: MethodOnlyReflectingProxyFactory, deps: [] },
            { provide: MethodOnlyReflectingProxyFactory, useClass: MethodOnlyReflectingProxyFactory, deps: [Injector] },
            { provide: APPLY_RETURN_VALUE, useValue: { create: () => ({}) }, deps: [] },
            { provide: CONSTRUCT_RETURN_VALUE, useValue: { create: () => ({}) }, deps: [] },
            { provide: MethodReflectorTrap, useClass: MethodReflectorTrap, deps: [EXPRESSIONS] },
            ...options.providers,
        ];
        return this.reflectingProxyInjectorFactory.create({ providers });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMtcmVmbGVjdGluZy1wcm94eS5pbmplY3Rvci1mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbW9xL3NyYy9saWIvcmVmbGVjdG9yL2FzeW5jLXJlZmxlY3RpbmctcHJveHkuaW5qZWN0b3ItZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFdkQsT0FBTyxFQUNILGtCQUFrQixFQUNsQixzQkFBc0IsRUFDdEIsV0FBVyxFQUNYLGdCQUFnQixFQUVuQixNQUFNLHdCQUF3QixDQUFDO0FBRWhDLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRXBFLE1BQU0sT0FBTyxtQ0FBbUM7SUFDNUMsWUFBNkIsOEJBQThEO1FBQTlELG1DQUE4QixHQUE5Qiw4QkFBOEIsQ0FBZ0M7SUFDM0YsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUEyQyxFQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUM7UUFDN0QsTUFBTSxTQUFTLEdBQUc7WUFDZCxFQUFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBQztZQUNwRixFQUFDLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxRQUFRLEVBQUUsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUM7WUFDekcsRUFBQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQXdCLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBQztZQUM5RixFQUFDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBd0IsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDO1lBQ2xHLEVBQUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQztZQUNsRixHQUFHLE9BQU8sQ0FBQyxTQUFTO1NBQ3ZCLENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxNQUFNLENBQUMsRUFBQyxTQUFTLEVBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdG9yIH0gZnJvbSBcIi4uL3N0YXRpYy5pbmplY3Rvci9pbmplY3RvclwiO1xuaW1wb3J0IHsgU3RhdGljUHJvdmlkZXIgfSBmcm9tIFwiLi4vc3RhdGljLmluamVjdG9yL2ludGVyZmFjZS9wcm92aWRlclwiO1xuaW1wb3J0IHtcbiAgICBBUFBMWV9SRVRVUk5fVkFMVUUsXG4gICAgQ09OU1RSVUNUX1JFVFVSTl9WQUxVRSxcbiAgICBFWFBSRVNTSU9OUyxcbiAgICBHRVRfUkVUVVJOX1ZBTFVFLFxuICAgIElSZXR1cm5WYWx1ZUZhY3Rvcnlcbn0gZnJvbSBcIi4vZXhwcmVzc2lvbi1yZWZsZWN0b3JcIjtcbmltcG9ydCB7IFJlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeSB9IGZyb20gXCIuL3JlZmxlY3RpbmctcHJveHkuaW5qZWN0b3ItZmFjdG9yeVwiO1xuaW1wb3J0IHsgTWV0aG9kT25seVJlZmxlY3RpbmdQcm94eUZhY3RvcnkgfSBmcm9tIFwiLi9tZXRob2Qtb25seS1yZWZsZWN0aW5nLXByb3h5LmZhY3RvcnlcIjtcbmltcG9ydCB7IE1ldGhvZFJlZmxlY3RvclRyYXAgfSBmcm9tIFwiLi90cmFwcy9tZXRob2QucmVmbGVjdG9yLXRyYXBcIjtcblxuZXhwb3J0IGNsYXNzIEFzeW5jUmVmbGVjdGluZ1Byb3h5SW5qZWN0b3JGYWN0b3J5IHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHJlZmxlY3RpbmdQcm94eUluamVjdG9yRmFjdG9yeTogUmVmbGVjdGluZ1Byb3h5SW5qZWN0b3JGYWN0b3J5KSB7XG4gICAgfVxuXG4gICAgY3JlYXRlKG9wdGlvbnM6IHsgcHJvdmlkZXJzOiBTdGF0aWNQcm92aWRlcltdIH0gPSB7cHJvdmlkZXJzOiBbXX0pIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXJzID0gW1xuICAgICAgICAgICAge3Byb3ZpZGU6IEdFVF9SRVRVUk5fVkFMVUUsIHVzZUV4aXN0aW5nOiBNZXRob2RPbmx5UmVmbGVjdGluZ1Byb3h5RmFjdG9yeSwgZGVwczogW119LFxuICAgICAgICAgICAge3Byb3ZpZGU6IE1ldGhvZE9ubHlSZWZsZWN0aW5nUHJveHlGYWN0b3J5LCB1c2VDbGFzczogTWV0aG9kT25seVJlZmxlY3RpbmdQcm94eUZhY3RvcnksIGRlcHM6IFtJbmplY3Rvcl19LFxuICAgICAgICAgICAge3Byb3ZpZGU6IEFQUExZX1JFVFVSTl9WQUxVRSwgdXNlVmFsdWU6IHtjcmVhdGU6ICgpID0+ICh7fSl9IGFzIElSZXR1cm5WYWx1ZUZhY3RvcnksIGRlcHM6IFtdfSxcbiAgICAgICAgICAgIHtwcm92aWRlOiBDT05TVFJVQ1RfUkVUVVJOX1ZBTFVFLCB1c2VWYWx1ZToge2NyZWF0ZTogKCkgPT4gKHt9KX0gYXMgSVJldHVyblZhbHVlRmFjdG9yeSwgZGVwczogW119LFxuICAgICAgICAgICAge3Byb3ZpZGU6IE1ldGhvZFJlZmxlY3RvclRyYXAsIHVzZUNsYXNzOiBNZXRob2RSZWZsZWN0b3JUcmFwLCBkZXBzOiBbRVhQUkVTU0lPTlNdfSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMucHJvdmlkZXJzLFxuICAgICAgICBdO1xuICAgICAgICByZXR1cm4gdGhpcy5yZWZsZWN0aW5nUHJveHlJbmplY3RvckZhY3RvcnkuY3JlYXRlKHtwcm92aWRlcnN9KTtcbiAgICB9XG59XG4iXX0=