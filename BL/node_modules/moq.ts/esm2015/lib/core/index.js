import { MockCore } from "./mock-core";
import { MOCK_OPTIONS } from "../mock-options/mock-options.injection-token";
import { Tracker } from "../tracker/tracker";
import { ProxyFactory } from "../interceptors/proxy.factory";
import { Verifier } from "../verification/verifier";
import { PrototypeStorage } from "../interceptors/prototype.storage";
import { MOCK } from "../injector/mock.injection-token";
import { SetupFactory } from "../presets/setup.factory";
import { Injector } from "../static.injector/injector";
import { EXPRESSION_REFLECTOR } from "../reflector/expression-reflector";
/**
 * @hidden
 */
export default [
    {
        provide: MockCore, useClass: MockCore, deps: [
            MOCK_OPTIONS,
            Tracker,
            Injector,
            EXPRESSION_REFLECTOR,
            ProxyFactory,
            Verifier,
            PrototypeStorage,
            MOCK,
            SetupFactory
        ]
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjL2xpYi9jb3JlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRXpFOztHQUVHO0FBQ0gsZUFBZTtJQUNYO1FBQ0ksT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtZQUN6QyxZQUFZO1lBQ1osT0FBTztZQUNQLFFBQVE7WUFDUixvQkFBb0I7WUFDcEIsWUFBWTtZQUNaLFFBQVE7WUFDUixnQkFBZ0I7WUFDaEIsSUFBSTtZQUNKLFlBQVk7U0FDZjtLQUNKO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vY2tDb3JlIH0gZnJvbSBcIi4vbW9jay1jb3JlXCI7XG5pbXBvcnQgeyBNT0NLX09QVElPTlMgfSBmcm9tIFwiLi4vbW9jay1vcHRpb25zL21vY2stb3B0aW9ucy5pbmplY3Rpb24tdG9rZW5cIjtcbmltcG9ydCB7IFRyYWNrZXIgfSBmcm9tIFwiLi4vdHJhY2tlci90cmFja2VyXCI7XG5pbXBvcnQgeyBQcm94eUZhY3RvcnkgfSBmcm9tIFwiLi4vaW50ZXJjZXB0b3JzL3Byb3h5LmZhY3RvcnlcIjtcbmltcG9ydCB7IFZlcmlmaWVyIH0gZnJvbSBcIi4uL3ZlcmlmaWNhdGlvbi92ZXJpZmllclwiO1xuaW1wb3J0IHsgUHJvdG90eXBlU3RvcmFnZSB9IGZyb20gXCIuLi9pbnRlcmNlcHRvcnMvcHJvdG90eXBlLnN0b3JhZ2VcIjtcbmltcG9ydCB7IE1PQ0sgfSBmcm9tIFwiLi4vaW5qZWN0b3IvbW9jay5pbmplY3Rpb24tdG9rZW5cIjtcbmltcG9ydCB7IFNldHVwRmFjdG9yeSB9IGZyb20gXCIuLi9wcmVzZXRzL3NldHVwLmZhY3RvcnlcIjtcbmltcG9ydCB7IEluamVjdG9yIH0gZnJvbSBcIi4uL3N0YXRpYy5pbmplY3Rvci9pbmplY3RvclwiO1xuaW1wb3J0IHsgRVhQUkVTU0lPTl9SRUZMRUNUT1IgfSBmcm9tIFwiLi4vcmVmbGVjdG9yL2V4cHJlc3Npb24tcmVmbGVjdG9yXCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVmYXVsdCBbXG4gICAge1xuICAgICAgICBwcm92aWRlOiBNb2NrQ29yZSwgdXNlQ2xhc3M6IE1vY2tDb3JlLCBkZXBzOiBbXG4gICAgICAgICAgICBNT0NLX09QVElPTlMsXG4gICAgICAgICAgICBUcmFja2VyLFxuICAgICAgICAgICAgSW5qZWN0b3IsXG4gICAgICAgICAgICBFWFBSRVNTSU9OX1JFRkxFQ1RPUixcbiAgICAgICAgICAgIFByb3h5RmFjdG9yeSxcbiAgICAgICAgICAgIFZlcmlmaWVyLFxuICAgICAgICAgICAgUHJvdG90eXBlU3RvcmFnZSxcbiAgICAgICAgICAgIE1PQ0ssXG4gICAgICAgICAgICBTZXR1cEZhY3RvcnlcbiAgICAgICAgXVxuICAgIH0sXG5dO1xuIl19