export class ComplexExpressionErrorFormatter {
    constructor(options, namePrefixProvider, expressionFormatter, errorStyler) {
        this.options = options;
        this.namePrefixProvider = namePrefixProvider;
        this.expressionFormatter = expressionFormatter;
        this.errorStyler = errorStyler;
    }
    format(expressions) {
        const instance = this.namePrefixProvider.get(this.options.name);
        let message = instance;
        for (const [expression, valid] of expressions) {
            const value = this.expressionFormatter.format(expression, instance);
            message += valid ? value : this.errorStyler.style(value);
        }
        return message;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGxleC1leHByZXNzaW9uLmVycm9yLWZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL2F1dG8tbW9ja2luZy9leHByZXNzaW9uLmd1YXJkcy9leHByZXNzaW9uLmZvcm1hdHRlcnMvY29tcGxleC1leHByZXNzaW9uLmVycm9yLWZvcm1hdHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLE9BQU8sK0JBQStCO0lBQ3hDLFlBQ3FCLE9BQWtELEVBQ2xELGtCQUFzQyxFQUN0QyxtQkFBd0MsRUFDeEMsV0FBOEI7UUFIOUIsWUFBTyxHQUFQLE9BQU8sQ0FBMkM7UUFDbEQsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLGdCQUFXLEdBQVgsV0FBVyxDQUFtQjtJQUNuRCxDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQThDO1FBQ3hELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRSxJQUFJLE9BQU8sR0FBRyxRQUFRLENBQUM7UUFDdkIsS0FBSyxNQUFNLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxJQUFJLFdBQVcsRUFBRTtZQUMzQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUNwRSxPQUFPLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzVEO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwcmVzc2lvbnMgfSBmcm9tIFwiLi4vLi4vLi4vcmVmbGVjdG9yL2V4cHJlc3Npb25zXCI7XG5pbXBvcnQgeyBUeXBlb2ZJbmplY3Rpb25Ub2tlbiB9IGZyb20gXCIuLi8uLi8uLi9pbmplY3Rvci90eXBlb2YtaW5qZWN0aW9uLXRva2VuXCI7XG5pbXBvcnQgeyBNT0NLX09QVElPTlMgfSBmcm9tIFwiLi4vLi4vLi4vbW9jay1vcHRpb25zL21vY2stb3B0aW9ucy5pbmplY3Rpb24tdG9rZW5cIjtcbmltcG9ydCB7IE5hbWVQcmVmaXhQcm92aWRlciB9IGZyb20gXCIuLi8uLi9uYW1lLWZvcm1hdHRlcnMvbmFtZS1wcmVmaXgucHJvdmlkZXJcIjtcbmltcG9ydCB7IEV4cHJlc3Npb25Gb3JtYXR0ZXIgfSBmcm9tIFwiLi9leHByZXNzaW9uLmZvcm1hdHRlclwiO1xuaW1wb3J0IHsgU3RyaW5nRXJyb3JTdHlsZXIgfSBmcm9tIFwiLi9zdHJpbmcuZXJyb3Itc3R5bGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBDb21wbGV4RXhwcmVzc2lvbkVycm9yRm9ybWF0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBUeXBlb2ZJbmplY3Rpb25Ub2tlbjx0eXBlb2YgTU9DS19PUFRJT05TPixcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBuYW1lUHJlZml4UHJvdmlkZXI6IE5hbWVQcmVmaXhQcm92aWRlcixcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBleHByZXNzaW9uRm9ybWF0dGVyOiBFeHByZXNzaW9uRm9ybWF0dGVyLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGVycm9yU3R5bGVyOiBTdHJpbmdFcnJvclN0eWxlcikge1xuICAgIH1cblxuICAgIHB1YmxpYyBmb3JtYXQoZXhwcmVzc2lvbnM6IFtFeHByZXNzaW9uczx1bmtub3duPiwgYm9vbGVhbl1bXSkge1xuICAgICAgICBjb25zdCBpbnN0YW5jZSA9IHRoaXMubmFtZVByZWZpeFByb3ZpZGVyLmdldCh0aGlzLm9wdGlvbnMubmFtZSk7XG4gICAgICAgIGxldCBtZXNzYWdlID0gaW5zdGFuY2U7XG4gICAgICAgIGZvciAoY29uc3QgW2V4cHJlc3Npb24sIHZhbGlkXSBvZiBleHByZXNzaW9ucykge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmV4cHJlc3Npb25Gb3JtYXR0ZXIuZm9ybWF0KGV4cHJlc3Npb24sIGluc3RhbmNlKTtcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gdmFsaWQgPyB2YWx1ZSA6IHRoaXMuZXJyb3JTdHlsZXIuc3R5bGUodmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfVxufVxuIl19