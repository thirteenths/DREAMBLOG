/**
 * This class records all interactions with a mocked object.
 */
export class Tracker {
    constructor(sequenceId) {
        this.sequenceId = sequenceId;
        this.log = [];
    }
    /**
     * @hidden
     */
    add(action) {
        const record = { id: this.sequenceId.next(), expression: action };
        this.log.push(record);
    }
    /**
     * Returns recorded interactions.
     */
    get() {
        return [...this.log];
    }
    interactions() {
        return this.get().map(record => record.expression);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2tlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL3RyYWNrZXIvdHJhY2tlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXQTs7R0FFRztBQUNILE1BQU0sT0FBTyxPQUFPO0lBR2hCLFlBQW9CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFGbEMsUUFBRyxHQUFvQixFQUFFLENBQUM7SUFJbEMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksR0FBRyxDQUFDLE1BQWtCO1FBQ3pCLE1BQU0sTUFBTSxHQUFHLEVBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7T0FFRztJQUNJLEdBQUc7UUFDTixPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVNLFlBQVk7UUFDZixPQUFPLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gXCIuLi9yZWZsZWN0b3IvZXhwcmVzc2lvbnNcIjtcbmltcG9ydCB7IFNlcXVlbmNlSWQgfSBmcm9tIFwiLi9zZXF1ZW5jZS1pZFwiO1xuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhIHJlY29yZGVkIGludGVyYWN0aW9uIHdpdGggdGhlIGEgbW9ja2VkIG9iamVjdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUcmFja2VkQWN0aW9uIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIGV4cHJlc3Npb246IEV4cHJlc3Npb247XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyByZWNvcmRzIGFsbCBpbnRlcmFjdGlvbnMgd2l0aCBhIG1vY2tlZCBvYmplY3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBUcmFja2VyIHtcbiAgICBwcml2YXRlIGxvZzogVHJhY2tlZEFjdGlvbltdID0gW107XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcXVlbmNlSWQ6IFNlcXVlbmNlSWQpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwdWJsaWMgYWRkKGFjdGlvbjogRXhwcmVzc2lvbik6IHZvaWQge1xuICAgICAgICBjb25zdCByZWNvcmQgPSB7aWQ6IHRoaXMuc2VxdWVuY2VJZC5uZXh0KCksIGV4cHJlc3Npb246IGFjdGlvbn07XG4gICAgICAgIHRoaXMubG9nLnB1c2gocmVjb3JkKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHJlY29yZGVkIGludGVyYWN0aW9ucy5cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0KCk6IFRyYWNrZWRBY3Rpb25bXSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5sb2ddO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbnRlcmFjdGlvbnMoKTogRXhwcmVzc2lvbltdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCkubWFwKHJlY29yZCA9PiByZWNvcmQuZXhwcmVzc2lvbik7XG4gICAgfVxufVxuIl19