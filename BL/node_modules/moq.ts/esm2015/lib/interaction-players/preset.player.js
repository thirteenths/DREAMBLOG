import { ReturnsPreset } from "../presets/presets/returns.preset";
import { CallbacksPreset } from "../presets/presets/callbacks.preset";
import { ThrowsPreset } from "../presets/presets/throws.preset";
import { MimicsPreset } from "../presets/presets/mimics.preset";
/**
 * @hidden
 */
export class PresetPlayer {
    constructor(callbackPresetPlayer, mimicsPresetPlayer) {
        this.callbackPresetPlayer = callbackPresetPlayer;
        this.mimicsPresetPlayer = mimicsPresetPlayer;
    }
    play(preset, interaction) {
        if (preset instanceof ReturnsPreset) {
            return preset.value;
        }
        if (preset instanceof CallbacksPreset) {
            return this.callbackPresetPlayer.play(preset.callback, interaction);
        }
        if (preset instanceof MimicsPreset) {
            return this.mimicsPresetPlayer.play(preset.origin, interaction);
        }
        if (preset instanceof ThrowsPreset) {
            throw preset.exception;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2V0LnBsYXllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL2ludGVyYWN0aW9uLXBsYXllcnMvcHJlc2V0LnBsYXllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFaEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQUNyQixZQUNZLG9CQUEwQyxFQUMxQyxrQkFBc0M7UUFEdEMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUMxQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBRWxELENBQUM7SUFFTSxJQUFJLENBQUksTUFBa0IsRUFBRSxXQUF1QjtRQUN0RCxJQUFJLE1BQU0sWUFBWSxhQUFhLEVBQUU7WUFDakMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ3ZCO1FBQ0QsSUFBSSxNQUFNLFlBQVksZUFBZSxFQUFFO1lBQ25DLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ3ZFO1FBQ0QsSUFBSSxNQUFNLFlBQVksWUFBWSxFQUFFO1lBQ2hDLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ25FO1FBQ0QsSUFBSSxNQUFNLFlBQVksWUFBWSxFQUFFO1lBQ2hDLE1BQU0sTUFBTSxDQUFDLFNBQVMsQ0FBQztTQUMxQjtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElQcmVzZXQgfSBmcm9tIFwiLi4vcHJlc2V0cy9wcmVzZXRzL3ByZXNldFwiO1xuaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gXCIuLi9yZWZsZWN0b3IvZXhwcmVzc2lvbnNcIjtcbmltcG9ydCB7IFJldHVybnNQcmVzZXQgfSBmcm9tIFwiLi4vcHJlc2V0cy9wcmVzZXRzL3JldHVybnMucHJlc2V0XCI7XG5pbXBvcnQgeyBDYWxsYmFja1ByZXNldFBsYXllciB9IGZyb20gXCIuL2NhbGxiYWNrLXByZXNldC5wbGF5ZXJcIjtcbmltcG9ydCB7IENhbGxiYWNrc1ByZXNldCB9IGZyb20gXCIuLi9wcmVzZXRzL3ByZXNldHMvY2FsbGJhY2tzLnByZXNldFwiO1xuaW1wb3J0IHsgVGhyb3dzUHJlc2V0IH0gZnJvbSBcIi4uL3ByZXNldHMvcHJlc2V0cy90aHJvd3MucHJlc2V0XCI7XG5pbXBvcnQgeyBNaW1pY3NQcmVzZXRQbGF5ZXIgfSBmcm9tIFwiLi9taW1pY3MtcHJlc2V0LnBsYXllclwiO1xuaW1wb3J0IHsgTWltaWNzUHJlc2V0IH0gZnJvbSBcIi4uL3ByZXNldHMvcHJlc2V0cy9taW1pY3MucHJlc2V0XCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgUHJlc2V0UGxheWVyIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBjYWxsYmFja1ByZXNldFBsYXllcjogQ2FsbGJhY2tQcmVzZXRQbGF5ZXIsXG4gICAgICAgIHByaXZhdGUgbWltaWNzUHJlc2V0UGxheWVyOiBNaW1pY3NQcmVzZXRQbGF5ZXIpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5PFQ+KHByZXNldDogSVByZXNldDxUPiwgaW50ZXJhY3Rpb246IEV4cHJlc3Npb24pOiBhbnkge1xuICAgICAgICBpZiAocHJlc2V0IGluc3RhbmNlb2YgUmV0dXJuc1ByZXNldCkge1xuICAgICAgICAgICAgcmV0dXJuIHByZXNldC52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJlc2V0IGluc3RhbmNlb2YgQ2FsbGJhY2tzUHJlc2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jYWxsYmFja1ByZXNldFBsYXllci5wbGF5KHByZXNldC5jYWxsYmFjaywgaW50ZXJhY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmVzZXQgaW5zdGFuY2VvZiBNaW1pY3NQcmVzZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1pbWljc1ByZXNldFBsYXllci5wbGF5KHByZXNldC5vcmlnaW4sIGludGVyYWN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJlc2V0IGluc3RhbmNlb2YgVGhyb3dzUHJlc2V0KSB7XG4gICAgICAgICAgICB0aHJvdyBwcmVzZXQuZXhjZXB0aW9uO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19