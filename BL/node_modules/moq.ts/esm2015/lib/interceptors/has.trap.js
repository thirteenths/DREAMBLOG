import { InOperatorExpression } from "../reflector/expressions";
/**
 * @hidden
 */
export class HasTrap {
    constructor(tracker, propertiesValueStorage, interactionPlayer, inOperatorInteractionExplorer, hasPropertyExplorer, hasMethodExplorer, presetPlayablesUpdater) {
        this.tracker = tracker;
        this.propertiesValueStorage = propertiesValueStorage;
        this.interactionPlayer = interactionPlayer;
        this.inOperatorInteractionExplorer = inOperatorInteractionExplorer;
        this.hasPropertyExplorer = hasPropertyExplorer;
        this.hasMethodExplorer = hasMethodExplorer;
        this.presetPlayablesUpdater = presetPlayablesUpdater;
    }
    intercept(property) {
        const interaction = new InOperatorExpression(property);
        this.tracker.add(interaction);
        if (this.propertiesValueStorage.has(property)) {
            return true;
        }
        if (this.inOperatorInteractionExplorer.has(property)) {
            return this.interactionPlayer.play(interaction);
        }
        this.presetPlayablesUpdater.update(interaction, undefined);
        if (this.hasPropertyExplorer.has(property)) {
            return true;
        }
        if (this.hasMethodExplorer.has(property)) {
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzLnRyYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjL2xpYi9pbnRlcmNlcHRvcnMvaGFzLnRyYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFRaEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sT0FBTztJQUNoQixZQUNxQixPQUFnQixFQUNoQixzQkFBOEMsRUFDOUMsaUJBQW9DLEVBQ3BDLDZCQUE0RCxFQUM1RCxtQkFBd0MsRUFDeEMsaUJBQW9DLEVBQ3BDLHNCQUE4QztRQU45QyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7UUFDOUMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUNwQyxrQ0FBNkIsR0FBN0IsNkJBQTZCLENBQStCO1FBQzVELHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFDeEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUNwQywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0lBRW5FLENBQUM7SUFFTSxTQUFTLENBQUMsUUFBcUI7UUFDbEMsTUFBTSxXQUFXLEdBQUcsSUFBSSxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUU5QixJQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0MsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELElBQUksSUFBSSxDQUFDLDZCQUE2QixDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNsRCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDbkQ7UUFFRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUUzRCxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDeEMsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUN0QyxPQUFPLElBQUksQ0FBQztTQUNmO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhY2tlciB9IGZyb20gXCIuLi90cmFja2VyL3RyYWNrZXJcIjtcbmltcG9ydCB7IEluT3BlcmF0b3JFeHByZXNzaW9uIH0gZnJvbSBcIi4uL3JlZmxlY3Rvci9leHByZXNzaW9uc1wiO1xuaW1wb3J0IHsgUHJvcGVydGllc1ZhbHVlU3RvcmFnZSB9IGZyb20gXCIuL3Byb3BlcnRpZXMtdmFsdWUuc3RvcmFnZVwiO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25QbGF5ZXIgfSBmcm9tIFwiLi4vaW50ZXJhY3Rpb24tcGxheWVycy9pbnRlcmFjdGlvbi5wbGF5ZXJcIjtcbmltcG9ydCB7IEhhc1Byb3BlcnR5RXhwbG9yZXIgfSBmcm9tIFwiLi4vZXhwbG9yZXJzL2hhcy1wcm9wZXJ0eS5leHBsb3Jlci9oYXMtcHJvcGVydHkuZXhwbG9yZXJcIjtcbmltcG9ydCB7IEhhc01ldGhvZEV4cGxvcmVyIH0gZnJvbSBcIi4uL2V4cGxvcmVycy9oYXMtbWV0aG9kLmV4cGxvcmVyL2hhcy1tZXRob2QuZXhwbG9yZXJcIjtcbmltcG9ydCB7IEluT3BlcmF0b3JJbnRlcmFjdGlvbkV4cGxvcmVyIH0gZnJvbSBcIi4uL2V4cGxvcmVycy9pbi1vcGVyYXRvci1pbnRlcmFjdGlvbi5leHBsb3Jlci9pbi1vcGVyYXRvci1pbnRlcmFjdGlvbi5leHBsb3JlclwiO1xuaW1wb3J0IHsgUHJlc2V0UGxheWFibGVzVXBkYXRlciB9IGZyb20gXCIuLi9wbGF5YWJsZXMvcHJlc2V0LXBsYXlhYmxlcy51cGRhdGVyXCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgSGFzVHJhcCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgdHJhY2tlcjogVHJhY2tlcixcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBwcm9wZXJ0aWVzVmFsdWVTdG9yYWdlOiBQcm9wZXJ0aWVzVmFsdWVTdG9yYWdlLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGludGVyYWN0aW9uUGxheWVyOiBJbnRlcmFjdGlvblBsYXllcixcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBpbk9wZXJhdG9ySW50ZXJhY3Rpb25FeHBsb3JlcjogSW5PcGVyYXRvckludGVyYWN0aW9uRXhwbG9yZXIsXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgaGFzUHJvcGVydHlFeHBsb3JlcjogSGFzUHJvcGVydHlFeHBsb3JlcixcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBoYXNNZXRob2RFeHBsb3JlcjogSGFzTWV0aG9kRXhwbG9yZXIsXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgcHJlc2V0UGxheWFibGVzVXBkYXRlcjogUHJlc2V0UGxheWFibGVzVXBkYXRlcikge1xuXG4gICAgfVxuXG4gICAgcHVibGljIGludGVyY2VwdChwcm9wZXJ0eTogUHJvcGVydHlLZXkpOiBhbnkge1xuICAgICAgICBjb25zdCBpbnRlcmFjdGlvbiA9IG5ldyBJbk9wZXJhdG9yRXhwcmVzc2lvbihwcm9wZXJ0eSk7XG4gICAgICAgIHRoaXMudHJhY2tlci5hZGQoaW50ZXJhY3Rpb24pO1xuXG4gICAgICAgIGlmICh0aGlzLnByb3BlcnRpZXNWYWx1ZVN0b3JhZ2UuaGFzKHByb3BlcnR5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5pbk9wZXJhdG9ySW50ZXJhY3Rpb25FeHBsb3Jlci5oYXMocHJvcGVydHkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pbnRlcmFjdGlvblBsYXllci5wbGF5KGludGVyYWN0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucHJlc2V0UGxheWFibGVzVXBkYXRlci51cGRhdGUoaW50ZXJhY3Rpb24sIHVuZGVmaW5lZCk7XG5cbiAgICAgICAgaWYgKHRoaXMuaGFzUHJvcGVydHlFeHBsb3Jlci5oYXMocHJvcGVydHkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmhhc01ldGhvZEV4cGxvcmVyLmhhcyhwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==