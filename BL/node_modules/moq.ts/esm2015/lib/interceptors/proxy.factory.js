/**
 * @hidden
 */
export class ProxyFactory {
    constructor(options, getTrap, setTrap, hasTrap, applyTrap, getPrototypeOfTrap, setPrototypeOfTrap, constructTrap) {
        this.options = options;
        this.getTrap = getTrap;
        this.setTrap = setTrap;
        this.hasTrap = hasTrap;
        this.applyTrap = applyTrap;
        this.getPrototypeOfTrap = getPrototypeOfTrap;
        this.setPrototypeOfTrap = setPrototypeOfTrap;
        this.constructTrap = constructTrap;
    }
    object() {
        if (this._proxy === undefined) {
            this._proxy = this.createObject();
        }
        return this._proxy;
    }
    createObject() {
        const options = {
            get: (target, name) => this.getTrap.intercept(name),
            set: (target, name, value) => this.setTrap.intercept(target, name, value),
            has: (target, name) => this.hasTrap.intercept(name),
            apply: (target, thisArg, args) => this.applyTrap.intercept(target, thisArg, args),
            getPrototypeOf: () => this.getPrototypeOfTrap.intercept(),
            setPrototypeOf: (target, prototype) => this.setPrototypeOfTrap.intercept(prototype),
            construct: (target, args) => this.constructTrap.intercept(args)
        };
        if (this.options.name) {
            options["mockName"] = this.options.name;
        }
        return new Proxy(this.options.target, options);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJveHkuZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL2ludGVyY2VwdG9ycy9wcm94eS5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFlBQVk7SUFHckIsWUFBNkIsT0FBa0QsRUFDbEQsT0FBZ0IsRUFDaEIsT0FBZ0IsRUFDaEIsT0FBZ0IsRUFDaEIsU0FBb0IsRUFDcEIsa0JBQXNDLEVBQ3RDLGtCQUFzQyxFQUN0QyxhQUE0QjtRQVA1QixZQUFPLEdBQVAsT0FBTyxDQUEyQztRQUNsRCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3BCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUN6RCxDQUFDO0lBRU0sTUFBTTtRQUNULElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDckM7UUFFRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUVPLFlBQVk7UUFDaEIsTUFBTSxPQUFPLEdBQUc7WUFDWixHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFDbkQsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDO1lBQ3pFLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztZQUNuRCxLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUM7WUFDakYsY0FBYyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUU7WUFDekQsY0FBYyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7WUFDbkYsU0FBUyxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1NBQ2xFLENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQ25CLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztTQUMzQztRQUVELE9BQU8sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkQsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2V0VHJhcCB9IGZyb20gXCIuL2dldC50cmFwXCI7XG5pbXBvcnQgeyBTZXRUcmFwIH0gZnJvbSBcIi4vc2V0LnRyYXBcIjtcbmltcG9ydCB7IEFwcGx5VHJhcCB9IGZyb20gXCIuL2FwcGx5LnRyYXBcIjtcbmltcG9ydCB7IEdldFByb3RvdHlwZU9mVHJhcCB9IGZyb20gXCIuL2dldC1wcm90b3R5cGUtb2YudHJhcFwiO1xuaW1wb3J0IHsgU2V0UHJvdG90eXBlT2ZUcmFwIH0gZnJvbSBcIi4vc2V0LXByb3RvdHlwZS1vZi50cmFwXCI7XG5pbXBvcnQgeyBIYXNUcmFwIH0gZnJvbSBcIi4vaGFzLnRyYXBcIjtcbmltcG9ydCB7IE1PQ0tfT1BUSU9OUyB9IGZyb20gXCIuLi9tb2NrLW9wdGlvbnMvbW9jay1vcHRpb25zLmluamVjdGlvbi10b2tlblwiO1xuaW1wb3J0IHsgVHlwZW9mSW5qZWN0aW9uVG9rZW4gfSBmcm9tIFwiLi4vaW5qZWN0b3IvdHlwZW9mLWluamVjdGlvbi10b2tlblwiO1xuaW1wb3J0IHsgQ29uc3RydWN0VHJhcCB9IGZyb20gXCIuL2NvbnN0cnVjdC50cmFwXCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgUHJveHlGYWN0b3J5PFQ+IHtcbiAgICBwcml2YXRlIF9wcm94eTogVDtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgb3B0aW9uczogVHlwZW9mSW5qZWN0aW9uVG9rZW48dHlwZW9mIE1PQ0tfT1BUSU9OUz4sXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBnZXRUcmFwOiBHZXRUcmFwLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgc2V0VHJhcDogU2V0VHJhcCxcbiAgICAgICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGhhc1RyYXA6IEhhc1RyYXAsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBhcHBseVRyYXA6IEFwcGx5VHJhcCxcbiAgICAgICAgICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGdldFByb3RvdHlwZU9mVHJhcDogR2V0UHJvdG90eXBlT2ZUcmFwLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgcmVhZG9ubHkgc2V0UHJvdG90eXBlT2ZUcmFwOiBTZXRQcm90b3R5cGVPZlRyYXAsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb25zdHJ1Y3RUcmFwOiBDb25zdHJ1Y3RUcmFwKSB7XG4gICAgfVxuXG4gICAgcHVibGljIG9iamVjdCgpOiBUIHtcbiAgICAgICAgaWYgKHRoaXMuX3Byb3h5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb3h5ID0gdGhpcy5jcmVhdGVPYmplY3QoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9wcm94eTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNyZWF0ZU9iamVjdCgpOiBUIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGdldDogKHRhcmdldCwgbmFtZSkgPT4gdGhpcy5nZXRUcmFwLmludGVyY2VwdChuYW1lKSxcbiAgICAgICAgICAgIHNldDogKHRhcmdldCwgbmFtZSwgdmFsdWUpID0+IHRoaXMuc2V0VHJhcC5pbnRlcmNlcHQodGFyZ2V0LCBuYW1lLCB2YWx1ZSksXG4gICAgICAgICAgICBoYXM6ICh0YXJnZXQsIG5hbWUpID0+IHRoaXMuaGFzVHJhcC5pbnRlcmNlcHQobmFtZSksXG4gICAgICAgICAgICBhcHBseTogKHRhcmdldCwgdGhpc0FyZywgYXJncykgPT4gdGhpcy5hcHBseVRyYXAuaW50ZXJjZXB0KHRhcmdldCwgdGhpc0FyZywgYXJncyksXG4gICAgICAgICAgICBnZXRQcm90b3R5cGVPZjogKCkgPT4gdGhpcy5nZXRQcm90b3R5cGVPZlRyYXAuaW50ZXJjZXB0KCksXG4gICAgICAgICAgICBzZXRQcm90b3R5cGVPZjogKHRhcmdldCwgcHJvdG90eXBlKSA9PiB0aGlzLnNldFByb3RvdHlwZU9mVHJhcC5pbnRlcmNlcHQocHJvdG90eXBlKSxcbiAgICAgICAgICAgIGNvbnN0cnVjdDogKHRhcmdldCwgYXJncykgPT4gdGhpcy5jb25zdHJ1Y3RUcmFwLmludGVyY2VwdChhcmdzKVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubmFtZSkge1xuICAgICAgICAgICAgb3B0aW9uc1tcIm1vY2tOYW1lXCJdID0gdGhpcy5vcHRpb25zLm5hbWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3IFByb3h5KHRoaXMub3B0aW9ucy50YXJnZXQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbiJdfQ==