import { ApplyTrap } from "./apply.trap";
import { Tracker } from "../tracker/tracker";
import { InteractionPlayer } from "../interaction-players/interaction.player";
import { GetTrap } from "./get.trap";
import { PropertiesValueStorage } from "./properties-value.storage";
import { HasPropertyExplorer } from "../explorers/has-property.explorer/has-property.explorer";
import { HasMethodExplorer } from "../explorers/has-method.explorer/has-method.explorer";
import { SpyFunctionProvider } from "./spy-function.provider";
import { GetPrototypeOfTrap } from "./get-prototype-of.trap";
import { PrototypeStorage } from "./prototype.storage";
import { HasTrap } from "./has.trap";
import { InOperatorInteractionExplorer } from "../explorers/in-operator-interaction.explorer/in-operator-interaction.explorer";
import { PresetPlayablesUpdater } from "../playables/preset-playables.updater";
import { SetTrap } from "./set.trap";
import { SetPrototypeOfTrap } from "./set-prototype-of.trap";
import { ProxyFactory } from "./proxy.factory";
import { MOCK } from "../injector/mock.injection-token";
import { MOCK_OPTIONS } from "../mock-options/mock-options.injection-token";
import { PropertyIsReadOnlyTester } from "../explorers/has-property.explorer/property-is-read-only.tester";
import { ConstructTrap } from "./construct.trap";
/**
 * @hidden
 */
export default [
    {
        provide: ProxyFactory, useClass: ProxyFactory, deps: [
            MOCK_OPTIONS,
            GetTrap,
            SetTrap,
            HasTrap,
            ApplyTrap,
            GetPrototypeOfTrap,
            SetPrototypeOfTrap,
            ConstructTrap
        ]
    },
    { provide: ApplyTrap, useClass: ApplyTrap, deps: [Tracker, InteractionPlayer] },
    {
        provide: GetTrap, useClass: GetTrap, deps: [
            MOCK,
            Tracker,
            PropertiesValueStorage,
            InteractionPlayer,
            HasPropertyExplorer,
            HasMethodExplorer,
            SpyFunctionProvider
        ]
    },
    { provide: GetPrototypeOfTrap, useClass: GetPrototypeOfTrap, deps: [PrototypeStorage] },
    {
        provide: HasTrap, useClass: HasTrap, deps: [
            Tracker,
            PropertiesValueStorage,
            InteractionPlayer,
            InOperatorInteractionExplorer,
            HasPropertyExplorer,
            HasMethodExplorer,
            PresetPlayablesUpdater
        ]
    },
    { provide: PropertiesValueStorage, useClass: PropertiesValueStorage, deps: [] },
    { provide: PrototypeStorage, useFactory: ({ target }) => new PrototypeStorage(target), deps: [MOCK_OPTIONS] },
    {
        provide: SetTrap,
        useClass: SetTrap,
        deps: [Tracker, PropertiesValueStorage, InteractionPlayer, PropertyIsReadOnlyTester]
    },
    { provide: SetPrototypeOfTrap, useClass: SetPrototypeOfTrap, deps: [PrototypeStorage] },
    { provide: SpyFunctionProvider, useClass: SpyFunctionProvider, deps: [Tracker, InteractionPlayer] },
    { provide: ConstructTrap, useClass: ConstructTrap, deps: [Tracker, InteractionPlayer] },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjL2xpYi9pbnRlcmNlcHRvcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDN0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDOUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNyQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUMvRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUN6RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFDSCw2QkFBNkIsRUFDaEMsTUFBTSxnRkFBZ0YsQ0FBQztBQUN4RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBQzNHLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRDs7R0FFRztBQUNILGVBQWU7SUFDWDtRQUNJLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUU7WUFDakQsWUFBWTtZQUNaLE9BQU87WUFDUCxPQUFPO1lBQ1AsT0FBTztZQUNQLFNBQVM7WUFDVCxrQkFBa0I7WUFDbEIsa0JBQWtCO1lBQ2xCLGFBQWE7U0FDaEI7S0FDSjtJQUNELEVBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxFQUFDO0lBQzdFO1FBQ0ksT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRTtZQUN2QyxJQUFJO1lBQ0osT0FBTztZQUNQLHNCQUFzQjtZQUN0QixpQkFBaUI7WUFDakIsbUJBQW1CO1lBQ25CLGlCQUFpQjtZQUNqQixtQkFBbUI7U0FDdEI7S0FDSjtJQUNELEVBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFDO0lBQ3JGO1FBQ0ksT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRTtZQUN2QyxPQUFPO1lBQ1Asc0JBQXNCO1lBQ3RCLGlCQUFpQjtZQUNqQiw2QkFBNkI7WUFDN0IsbUJBQW1CO1lBQ25CLGlCQUFpQjtZQUNqQixzQkFBc0I7U0FDekI7S0FDSjtJQUNELEVBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDO0lBQzdFLEVBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksZ0JBQWdCLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUM7SUFDekc7UUFDSSxPQUFPLEVBQUUsT0FBTztRQUNoQixRQUFRLEVBQUUsT0FBTztRQUNqQixJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsaUJBQWlCLEVBQUUsd0JBQXdCLENBQUM7S0FDdkY7SUFDRCxFQUFDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsRUFBQztJQUNyRixFQUFDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLGlCQUFpQixDQUFDLEVBQUM7SUFDakcsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLGlCQUFpQixDQUFDLEVBQUM7Q0FDeEYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcGx5VHJhcCB9IGZyb20gXCIuL2FwcGx5LnRyYXBcIjtcbmltcG9ydCB7IFRyYWNrZXIgfSBmcm9tIFwiLi4vdHJhY2tlci90cmFja2VyXCI7XG5pbXBvcnQgeyBJbnRlcmFjdGlvblBsYXllciB9IGZyb20gXCIuLi9pbnRlcmFjdGlvbi1wbGF5ZXJzL2ludGVyYWN0aW9uLnBsYXllclwiO1xuaW1wb3J0IHsgR2V0VHJhcCB9IGZyb20gXCIuL2dldC50cmFwXCI7XG5pbXBvcnQgeyBQcm9wZXJ0aWVzVmFsdWVTdG9yYWdlIH0gZnJvbSBcIi4vcHJvcGVydGllcy12YWx1ZS5zdG9yYWdlXCI7XG5pbXBvcnQgeyBIYXNQcm9wZXJ0eUV4cGxvcmVyIH0gZnJvbSBcIi4uL2V4cGxvcmVycy9oYXMtcHJvcGVydHkuZXhwbG9yZXIvaGFzLXByb3BlcnR5LmV4cGxvcmVyXCI7XG5pbXBvcnQgeyBIYXNNZXRob2RFeHBsb3JlciB9IGZyb20gXCIuLi9leHBsb3JlcnMvaGFzLW1ldGhvZC5leHBsb3Jlci9oYXMtbWV0aG9kLmV4cGxvcmVyXCI7XG5pbXBvcnQgeyBTcHlGdW5jdGlvblByb3ZpZGVyIH0gZnJvbSBcIi4vc3B5LWZ1bmN0aW9uLnByb3ZpZGVyXCI7XG5pbXBvcnQgeyBHZXRQcm90b3R5cGVPZlRyYXAgfSBmcm9tIFwiLi9nZXQtcHJvdG90eXBlLW9mLnRyYXBcIjtcbmltcG9ydCB7IFByb3RvdHlwZVN0b3JhZ2UgfSBmcm9tIFwiLi9wcm90b3R5cGUuc3RvcmFnZVwiO1xuaW1wb3J0IHsgSGFzVHJhcCB9IGZyb20gXCIuL2hhcy50cmFwXCI7XG5pbXBvcnQge1xuICAgIEluT3BlcmF0b3JJbnRlcmFjdGlvbkV4cGxvcmVyXG59IGZyb20gXCIuLi9leHBsb3JlcnMvaW4tb3BlcmF0b3ItaW50ZXJhY3Rpb24uZXhwbG9yZXIvaW4tb3BlcmF0b3ItaW50ZXJhY3Rpb24uZXhwbG9yZXJcIjtcbmltcG9ydCB7IFByZXNldFBsYXlhYmxlc1VwZGF0ZXIgfSBmcm9tIFwiLi4vcGxheWFibGVzL3ByZXNldC1wbGF5YWJsZXMudXBkYXRlclwiO1xuaW1wb3J0IHsgU2V0VHJhcCB9IGZyb20gXCIuL3NldC50cmFwXCI7XG5pbXBvcnQgeyBTZXRQcm90b3R5cGVPZlRyYXAgfSBmcm9tIFwiLi9zZXQtcHJvdG90eXBlLW9mLnRyYXBcIjtcbmltcG9ydCB7IFByb3h5RmFjdG9yeSB9IGZyb20gXCIuL3Byb3h5LmZhY3RvcnlcIjtcbmltcG9ydCB7IE1PQ0sgfSBmcm9tIFwiLi4vaW5qZWN0b3IvbW9jay5pbmplY3Rpb24tdG9rZW5cIjtcbmltcG9ydCB7IE1PQ0tfT1BUSU9OUyB9IGZyb20gXCIuLi9tb2NrLW9wdGlvbnMvbW9jay1vcHRpb25zLmluamVjdGlvbi10b2tlblwiO1xuaW1wb3J0IHsgUHJvcGVydHlJc1JlYWRPbmx5VGVzdGVyIH0gZnJvbSBcIi4uL2V4cGxvcmVycy9oYXMtcHJvcGVydHkuZXhwbG9yZXIvcHJvcGVydHktaXMtcmVhZC1vbmx5LnRlc3RlclwiO1xuaW1wb3J0IHsgQ29uc3RydWN0VHJhcCB9IGZyb20gXCIuL2NvbnN0cnVjdC50cmFwXCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVmYXVsdCBbXG4gICAge1xuICAgICAgICBwcm92aWRlOiBQcm94eUZhY3RvcnksIHVzZUNsYXNzOiBQcm94eUZhY3RvcnksIGRlcHM6IFtcbiAgICAgICAgICAgIE1PQ0tfT1BUSU9OUyxcbiAgICAgICAgICAgIEdldFRyYXAsXG4gICAgICAgICAgICBTZXRUcmFwLFxuICAgICAgICAgICAgSGFzVHJhcCxcbiAgICAgICAgICAgIEFwcGx5VHJhcCxcbiAgICAgICAgICAgIEdldFByb3RvdHlwZU9mVHJhcCxcbiAgICAgICAgICAgIFNldFByb3RvdHlwZU9mVHJhcCxcbiAgICAgICAgICAgIENvbnN0cnVjdFRyYXBcbiAgICAgICAgXVxuICAgIH0sXG4gICAge3Byb3ZpZGU6IEFwcGx5VHJhcCwgdXNlQ2xhc3M6IEFwcGx5VHJhcCwgZGVwczogW1RyYWNrZXIsIEludGVyYWN0aW9uUGxheWVyXX0sXG4gICAge1xuICAgICAgICBwcm92aWRlOiBHZXRUcmFwLCB1c2VDbGFzczogR2V0VHJhcCwgZGVwczogW1xuICAgICAgICAgICAgTU9DSyxcbiAgICAgICAgICAgIFRyYWNrZXIsXG4gICAgICAgICAgICBQcm9wZXJ0aWVzVmFsdWVTdG9yYWdlLFxuICAgICAgICAgICAgSW50ZXJhY3Rpb25QbGF5ZXIsXG4gICAgICAgICAgICBIYXNQcm9wZXJ0eUV4cGxvcmVyLFxuICAgICAgICAgICAgSGFzTWV0aG9kRXhwbG9yZXIsXG4gICAgICAgICAgICBTcHlGdW5jdGlvblByb3ZpZGVyXG4gICAgICAgIF1cbiAgICB9LFxuICAgIHtwcm92aWRlOiBHZXRQcm90b3R5cGVPZlRyYXAsIHVzZUNsYXNzOiBHZXRQcm90b3R5cGVPZlRyYXAsIGRlcHM6IFtQcm90b3R5cGVTdG9yYWdlXX0sXG4gICAge1xuICAgICAgICBwcm92aWRlOiBIYXNUcmFwLCB1c2VDbGFzczogSGFzVHJhcCwgZGVwczogW1xuICAgICAgICAgICAgVHJhY2tlcixcbiAgICAgICAgICAgIFByb3BlcnRpZXNWYWx1ZVN0b3JhZ2UsXG4gICAgICAgICAgICBJbnRlcmFjdGlvblBsYXllcixcbiAgICAgICAgICAgIEluT3BlcmF0b3JJbnRlcmFjdGlvbkV4cGxvcmVyLFxuICAgICAgICAgICAgSGFzUHJvcGVydHlFeHBsb3JlcixcbiAgICAgICAgICAgIEhhc01ldGhvZEV4cGxvcmVyLFxuICAgICAgICAgICAgUHJlc2V0UGxheWFibGVzVXBkYXRlclxuICAgICAgICBdXG4gICAgfSxcbiAgICB7cHJvdmlkZTogUHJvcGVydGllc1ZhbHVlU3RvcmFnZSwgdXNlQ2xhc3M6IFByb3BlcnRpZXNWYWx1ZVN0b3JhZ2UsIGRlcHM6IFtdfSxcbiAgICB7cHJvdmlkZTogUHJvdG90eXBlU3RvcmFnZSwgdXNlRmFjdG9yeTogKHt0YXJnZXR9KSA9PiBuZXcgUHJvdG90eXBlU3RvcmFnZSh0YXJnZXQpLCBkZXBzOiBbTU9DS19PUFRJT05TXX0sXG4gICAge1xuICAgICAgICBwcm92aWRlOiBTZXRUcmFwLFxuICAgICAgICB1c2VDbGFzczogU2V0VHJhcCxcbiAgICAgICAgZGVwczogW1RyYWNrZXIsIFByb3BlcnRpZXNWYWx1ZVN0b3JhZ2UsIEludGVyYWN0aW9uUGxheWVyLCBQcm9wZXJ0eUlzUmVhZE9ubHlUZXN0ZXJdXG4gICAgfSxcbiAgICB7cHJvdmlkZTogU2V0UHJvdG90eXBlT2ZUcmFwLCB1c2VDbGFzczogU2V0UHJvdG90eXBlT2ZUcmFwLCBkZXBzOiBbUHJvdG90eXBlU3RvcmFnZV19LFxuICAgIHtwcm92aWRlOiBTcHlGdW5jdGlvblByb3ZpZGVyLCB1c2VDbGFzczogU3B5RnVuY3Rpb25Qcm92aWRlciwgZGVwczogW1RyYWNrZXIsIEludGVyYWN0aW9uUGxheWVyXX0sXG4gICAge3Byb3ZpZGU6IENvbnN0cnVjdFRyYXAsIHVzZUNsYXNzOiBDb25zdHJ1Y3RUcmFwLCBkZXBzOiBbVHJhY2tlciwgSW50ZXJhY3Rpb25QbGF5ZXJdfSxcbl07XG4iXX0=