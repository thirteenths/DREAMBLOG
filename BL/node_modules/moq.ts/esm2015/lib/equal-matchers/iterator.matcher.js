import { ConstantEqualityComparer } from "../expression.equality-comparers/constant.equality-comparer";
/**
 * Matches objects that support Iterable protocol
 */
export class IteratorMatcher {
    constructor(injector, iterableTester) {
        this.injector = injector;
        this.iterableTester = iterableTester;
    }
    /*eslint-disable-next-line @typescript-eslint/ban-types*/
    matched(left, right) {
        if (this.iterableTester.verify(left, right) === true) {
            const leftIterator = [...left[Symbol.iterator]()];
            const rightIterator = [...right[Symbol.iterator]()];
            if (leftIterator.length !== rightIterator.length)
                return false;
            const constantMatcher = this.injector.get(ConstantEqualityComparer);
            for (let i = 0; i < leftIterator.length; i++) {
                const leftValue = leftIterator[i];
                const rightValue = rightIterator[i];
                if (constantMatcher.equals(leftValue, rightValue) === false) {
                    return false;
                }
            }
            return true;
        }
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlcmF0b3IubWF0Y2hlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL2VxdWFsLW1hdGNoZXJzL2l0ZXJhdG9yLm1hdGNoZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFFdkc7O0dBRUc7QUFDSCxNQUFNLE9BQU8sZUFBZTtJQUV4QixZQUNxQixRQUFrQixFQUNsQixjQUE4QjtRQUQ5QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUNuRCxDQUFDO0lBRUQseURBQXlEO0lBQ2xELE9BQU8sQ0FBbUIsSUFBTyxFQUFFLEtBQVE7UUFDOUMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQ2xELE1BQU0sWUFBWSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNsRCxNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDcEQsSUFBSSxZQUFZLENBQUMsTUFBTSxLQUFLLGFBQWEsQ0FBQyxNQUFNO2dCQUFFLE9BQU8sS0FBSyxDQUFDO1lBRS9ELE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7WUFDcEUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFDLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbEMsTUFBTSxVQUFVLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwQyxJQUFJLGVBQWUsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxLQUFLLEtBQUssRUFBRTtvQkFDekQsT0FBTyxLQUFLLENBQUM7aUJBQ2hCO2FBQ0o7WUFFRCxPQUFPLElBQUksQ0FBQztTQUNmO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVUZXN0ZXIgfSBmcm9tIFwiLi9pdGVyYWJsZS50ZXN0ZXJcIjtcbmltcG9ydCB7IElPYmplY3RNYXRjaGVyIH0gZnJvbSBcIi4vb2JqZWN0LW1hdGNoZXIudHlwZVwiO1xuaW1wb3J0IHsgSW5qZWN0b3IgfSBmcm9tIFwiLi4vc3RhdGljLmluamVjdG9yL2luamVjdG9yXCI7XG5pbXBvcnQgeyBDb25zdGFudEVxdWFsaXR5Q29tcGFyZXIgfSBmcm9tIFwiLi4vZXhwcmVzc2lvbi5lcXVhbGl0eS1jb21wYXJlcnMvY29uc3RhbnQuZXF1YWxpdHktY29tcGFyZXJcIjtcblxuLyoqXG4gKiBNYXRjaGVzIG9iamVjdHMgdGhhdCBzdXBwb3J0IEl0ZXJhYmxlIHByb3RvY29sXG4gKi9cbmV4cG9ydCBjbGFzcyBJdGVyYXRvck1hdGNoZXIgaW1wbGVtZW50cyBJT2JqZWN0TWF0Y2hlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgaXRlcmFibGVUZXN0ZXI6IEl0ZXJhYmxlVGVzdGVyKSB7XG4gICAgfVxuXG4gICAgLyplc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlcyovXG4gICAgcHVibGljIG1hdGNoZWQ8VCBleHRlbmRzIG9iamVjdD4obGVmdDogVCwgcmlnaHQ6IFQpOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHRoaXMuaXRlcmFibGVUZXN0ZXIudmVyaWZ5KGxlZnQsIHJpZ2h0KSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc3QgbGVmdEl0ZXJhdG9yID0gWy4uLmxlZnRbU3ltYm9sLml0ZXJhdG9yXSgpXTtcbiAgICAgICAgICAgIGNvbnN0IHJpZ2h0SXRlcmF0b3IgPSBbLi4ucmlnaHRbU3ltYm9sLml0ZXJhdG9yXSgpXTtcbiAgICAgICAgICAgIGlmIChsZWZ0SXRlcmF0b3IubGVuZ3RoICE9PSByaWdodEl0ZXJhdG9yLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgICAgICBjb25zdCBjb25zdGFudE1hdGNoZXIgPSB0aGlzLmluamVjdG9yLmdldChDb25zdGFudEVxdWFsaXR5Q29tcGFyZXIpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZWZ0SXRlcmF0b3IubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsZWZ0VmFsdWUgPSBsZWZ0SXRlcmF0b3JbaV07XG4gICAgICAgICAgICAgICAgY29uc3QgcmlnaHRWYWx1ZSA9IHJpZ2h0SXRlcmF0b3JbaV07XG4gICAgICAgICAgICAgICAgaWYgKGNvbnN0YW50TWF0Y2hlci5lcXVhbHMobGVmdFZhbHVlLCByaWdodFZhbHVlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cblxuIl19