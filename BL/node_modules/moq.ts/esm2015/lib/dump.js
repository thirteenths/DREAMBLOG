import { TrackedExpressionsFormatter } from "./formatters/tracked-expressions.formatter";
/**
 * This function dumps into console.log all interactions with the mocked object
 */
export function dump(mock, writer = console) {
    const formatter = mock.resolve(TrackedExpressionsFormatter);
    const expressions = mock.tracker.get().map(record => record.expression);
    const output = formatter.format(expressions);
    const delimiter = "-------------------------------";
    writer.log(`Dump of ${mock.name === undefined ? "noname mock" : mock.name}`);
    writer.log(delimiter);
    writer.log(`\n${output}`);
    writer.log(delimiter);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvbGliL2R1bXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFHekY7O0dBRUc7QUFDSCxNQUFNLFVBQVUsSUFBSSxDQUFJLElBQWMsRUFBRSxTQUFrQixPQUFPO0lBQzdELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUM1RCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4RSxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sU0FBUyxHQUFHLGlDQUFpQyxDQUFDO0lBQ3BELE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUM3RSxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RCLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzFCLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDMUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYWNrZWRFeHByZXNzaW9uc0Zvcm1hdHRlciB9IGZyb20gXCIuL2Zvcm1hdHRlcnMvdHJhY2tlZC1leHByZXNzaW9ucy5mb3JtYXR0ZXJcIjtcclxuaW1wb3J0IHsgSU1vY2sgfSBmcm9tIFwiLi9tb3FcIjtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGZ1bmN0aW9uIGR1bXBzIGludG8gY29uc29sZS5sb2cgYWxsIGludGVyYWN0aW9ucyB3aXRoIHRoZSBtb2NrZWQgb2JqZWN0XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZHVtcDxUPihtb2NrOiBJTW9jazxUPiwgd3JpdGVyOiBDb25zb2xlID0gY29uc29sZSk6IHZvaWQge1xyXG4gICAgY29uc3QgZm9ybWF0dGVyID0gbW9jay5yZXNvbHZlKFRyYWNrZWRFeHByZXNzaW9uc0Zvcm1hdHRlcik7XHJcbiAgICBjb25zdCBleHByZXNzaW9ucyA9IG1vY2sudHJhY2tlci5nZXQoKS5tYXAocmVjb3JkID0+IHJlY29yZC5leHByZXNzaW9uKTtcclxuICAgIGNvbnN0IG91dHB1dCA9IGZvcm1hdHRlci5mb3JtYXQoZXhwcmVzc2lvbnMpO1xyXG4gICAgY29uc3QgZGVsaW1pdGVyID0gXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXCI7XHJcbiAgICB3cml0ZXIubG9nKGBEdW1wIG9mICR7bW9jay5uYW1lID09PSB1bmRlZmluZWQgPyBcIm5vbmFtZSBtb2NrXCIgOiBtb2NrLm5hbWV9YCk7XHJcbiAgICB3cml0ZXIubG9nKGRlbGltaXRlcik7XHJcbiAgICB3cml0ZXIubG9nKGBcXG4ke291dHB1dH1gKTtcclxuICAgIHdyaXRlci5sb2coZGVsaW1pdGVyKTtcclxufVxyXG4iXX0=