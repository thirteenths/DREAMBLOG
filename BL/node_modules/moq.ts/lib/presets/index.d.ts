import { Presets } from "./presets";
import { PresetBuilderFactory } from "./preset-builder.factory";
import { SetupFactory } from "./setup.factory";
import { RootMockProvider } from "../auto-mocking/root-mock.provider";
import { AutoMockProvider } from "../auto-mocking/auto-mock.provider";
import { CallbackPresetFactory } from "./factories/callback-preset.factory";
import { MimicsPresetFactory } from "./factories/mimics-preset.factory";
import { ReturnsAsyncPresetFactory } from "./factories/returns-async-preset.factory";
import { ReturnsPresetFactory } from "./factories/returns-preset.factory";
import { ThrowsAsyncPresetFactory } from "./factories/throws-async-preset.factory";
import { ThrowsPresetFactory } from "./factories/throws-preset.factory";
import { ResolvedPromiseFactory } from "./resolved-promise.factory";
import { RejectedPromiseFactory } from "./rejected-promise.factory";
import { ComplexExpressionGuard } from "../auto-mocking/expression.guards/complex-expression.guard";
declare const _default: ({
    provide: typeof SetupFactory;
    useClass: typeof SetupFactory;
    deps: (typeof PresetBuilderFactory | typeof AutoMockProvider | typeof ComplexExpressionGuard)[];
} | {
    provide: typeof Presets;
    useClass: typeof Presets;
    deps: any[];
} | {
    provide: typeof ResolvedPromiseFactory;
    useClass: typeof ResolvedPromiseFactory;
    deps: any[];
} | {
    provide: typeof ReturnsPresetFactory;
    useClass: typeof ReturnsPresetFactory;
    deps: (typeof Presets | typeof RootMockProvider)[];
} | {
    provide: typeof ThrowsPresetFactory;
    useClass: typeof ThrowsPresetFactory;
    deps: (typeof Presets | typeof RootMockProvider)[];
} | {
    provide: typeof CallbackPresetFactory;
    useClass: typeof CallbackPresetFactory;
    deps: (typeof Presets | typeof RootMockProvider)[];
} | {
    provide: typeof MimicsPresetFactory;
    useClass: typeof MimicsPresetFactory;
    deps: (typeof Presets | typeof RootMockProvider)[];
} | {
    provide: typeof ReturnsAsyncPresetFactory;
    useClass: typeof ReturnsAsyncPresetFactory;
    deps: (typeof Presets | typeof ResolvedPromiseFactory | typeof RootMockProvider)[];
} | {
    provide: typeof ThrowsAsyncPresetFactory;
    useClass: typeof ThrowsAsyncPresetFactory;
    deps: (typeof Presets | typeof RejectedPromiseFactory | typeof RootMockProvider)[];
} | {
    provide: typeof PresetBuilderFactory;
    useClass: typeof PresetBuilderFactory;
    deps: (typeof ReturnsPresetFactory | typeof MimicsPresetFactory | typeof CallbackPresetFactory | typeof ThrowsPresetFactory | typeof ReturnsAsyncPresetFactory | typeof ThrowsAsyncPresetFactory)[];
})[];
/**
 * @hidden
 */
export default _default;
