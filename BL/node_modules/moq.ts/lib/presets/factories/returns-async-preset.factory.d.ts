import { InjectionFactory, TypeOfInjectionFactory } from "../../injector/injection-factory";
import { IMock, IPlayable, PromisedType } from "../../moq";
import { Presets } from "../presets";
import { Expressions } from "../../reflector/expressions";
import { ResolvedPromiseFactory } from "../resolved-promise.factory";
/**
 * @Hidden
 */
export declare class ReturnsAsyncPresetFactory<T, TValue = any> implements InjectionFactory {
    private readonly rootMock;
    private readonly presets;
    private readonly resolvedPromise;
    constructor(rootMock: IMock<T>, presets: Presets<T>, resolvedPromise: TypeOfInjectionFactory<ResolvedPromiseFactory>);
    factory(): (target: Expressions<T>, playable: IPlayable, value: PromisedType<TValue>) => IMock<T>;
}
