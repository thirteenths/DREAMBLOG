import { InjectionFactory } from "../../injector/injection-factory";
import { IMock, IPlayable } from "../../moq";
import { Presets } from "../presets";
import { Expressions } from "../../reflector/expressions";
import { Expression } from "../../reflector/expressions";
/**
 * @Hidden
 */
export declare class CallbackPresetFactory<T, TValue = any> implements InjectionFactory {
    private readonly rootMock;
    private readonly presets;
    constructor(rootMock: IMock<T>, presets: Presets<T>);
    factory(): (target: Expressions<T>, playable: IPlayable, callback: (interaction: Expression) => TValue) => IMock<T>;
}
