import { ComplexExpressionGuard } from "./complex-expression.guard";
import { ComplexExpressionValidator } from "./complex-expression.validator";
import { ExpressionGuardExceptionFactory } from "./expression-guard-exception.factory";
import { ExpressionValidator } from "./expression.validator";
import { FunctionExpressionValidator } from "./function-expression.validator";
import { ComplexExpressionErrorFormatter } from "./expression.formatters/complex-expression.error-formatter";
declare const _default: ({
    provide: typeof ComplexExpressionErrorFormatter;
    useClass: typeof ComplexExpressionErrorFormatter;
    deps: (import("../../static.injector/injection_token").InjectionToken<import("../../moq").IMockOptions<any>> | typeof import("../name-formatters/name-prefix.provider").NamePrefixProvider | typeof import("./expression.formatters/expression.formatter").ExpressionFormatter | typeof import("./expression.formatters/string.error-styler").StringErrorStyler)[];
} | {
    provide: typeof import("./expression.formatters/expression.formatter").ExpressionFormatter;
    useClass: typeof import("./expression.formatters/expression.formatter").ExpressionFormatter;
    deps: (typeof import("../../formatters/property-key.formatter").PropertyKeyFormatter | typeof import("../../formatters/function.formatter").FunctionFormatter | typeof import("../../formatters/method.formatter").MethodFormatter)[];
} | {
    provide: typeof import("./expression.formatters/string.error-styler").StringErrorStyler;
    useClass: typeof import("./expression.formatters/string.error-styler").StringErrorStyler;
    deps: any[];
} | {
    provide: typeof ComplexExpressionGuard;
    useClass: typeof ComplexExpressionGuard;
    deps: (typeof ComplexExpressionValidator | typeof ExpressionGuardExceptionFactory)[];
} | {
    provide: typeof ComplexExpressionValidator;
    useClass: typeof ComplexExpressionValidator;
    deps: (typeof ExpressionValidator)[];
} | {
    provide: typeof ExpressionGuardExceptionFactory;
    useClass: typeof ExpressionGuardExceptionFactory;
    deps: (typeof ComplexExpressionErrorFormatter)[];
} | {
    provide: typeof ExpressionValidator;
    useClass: typeof ExpressionValidator;
    deps: (typeof FunctionExpressionValidator)[];
} | {
    provide: typeof FunctionExpressionValidator;
    useClass: typeof FunctionExpressionValidator;
    deps: any[];
})[];
/**
 * @hidden
 */
export default _default;
