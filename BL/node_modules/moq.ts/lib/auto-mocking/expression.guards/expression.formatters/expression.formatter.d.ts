import { Expressions } from "../../../reflector/expressions";
import { FunctionFormatter } from "../../../formatters/function.formatter";
import { PropertyKeyFormatter } from "../../../formatters/property-key.formatter";
import { MethodFormatter } from "../../../formatters/method.formatter";
import { ConstantFormatter } from "../../../formatters/constant.formatter";
export declare class ExpressionFormatter {
    private readonly functionFormatter;
    private readonly propertyKeyFormatter;
    private readonly instanceMethodFormatter;
    private readonly constantFormatter;
    constructor(functionFormatter: FunctionFormatter, propertyKeyFormatter: PropertyKeyFormatter, instanceMethodFormatter: MethodFormatter, constantFormatter: ConstantFormatter);
    format(expression: Expressions<unknown>, name: string): string;
}
