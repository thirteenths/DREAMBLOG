import { Expressions } from "../../../reflector/expressions";
import { TypeofInjectionToken } from "../../../injector/typeof-injection-token";
import { MOCK_OPTIONS } from "../../../mock-options/mock-options.injection-token";
import { NamePrefixProvider } from "../../name-formatters/name-prefix.provider";
import { ExpressionFormatter } from "./expression.formatter";
import { StringErrorStyler } from "./string.error-styler";
export declare class ComplexExpressionErrorFormatter {
    private readonly options;
    private readonly namePrefixProvider;
    private readonly expressionFormatter;
    private readonly errorStyler;
    constructor(options: TypeofInjectionToken<typeof MOCK_OPTIONS>, namePrefixProvider: NamePrefixProvider, expressionFormatter: ExpressionFormatter, errorStyler: StringErrorStyler);
    format(expressions: [Expressions<unknown>, boolean][]): string;
}
