import { EqualMatcher } from "./equal.matcher";
import { EqualConstantMatcher } from "./equal-constant.matcher";
import { CommonTypeProvider } from "./common-type.provider";
import { PrimitiveMatcher } from "./primitive.matcher";
import { ObjectMatcher } from "./object.matcher";
import { FunctionMatcher } from "./function.matcher";
import { IterableTester } from "./iterable.tester";
import { IteratorMatcher } from "./iterator.matcher";
import { POJOMatcher } from "./pojo.matcher";
import { ObjectMapProvider } from "./object-map.provider";
import { MapMatcher } from "./map.matcher";
import { Injector } from "../static.injector/injector";
import { ConstantEqualityComparer } from "../expression.equality-comparers/constant.equality-comparer";
import { ItEqualityComparer } from "../expression.equality-comparers/it.equality-comparer";
declare const _default: ({
    provide: typeof ConstantEqualityComparer;
    useExisting: typeof EqualConstantMatcher;
    useClass?: undefined;
    deps?: undefined;
} | {
    provide: typeof EqualConstantMatcher;
    useClass: typeof EqualConstantMatcher;
    deps: (typeof ItEqualityComparer | typeof EqualMatcher)[];
    useExisting?: undefined;
} | {
    provide: typeof CommonTypeProvider;
    useClass: typeof CommonTypeProvider;
    deps: any[];
    useExisting?: undefined;
} | {
    provide: typeof EqualMatcher;
    useClass: typeof EqualMatcher;
    deps: (typeof CommonTypeProvider | typeof PrimitiveMatcher | typeof ObjectMatcher)[];
    useExisting?: undefined;
} | {
    provide: typeof FunctionMatcher;
    useClass: typeof FunctionMatcher;
    deps: any[];
    useExisting?: undefined;
} | {
    provide: typeof IterableTester;
    useClass: typeof IterableTester;
    deps: any[];
    useExisting?: undefined;
} | {
    provide: typeof IteratorMatcher;
    useClass: typeof IteratorMatcher;
    deps: (typeof Injector | typeof IterableTester)[];
    useExisting?: undefined;
} | {
    provide: typeof ObjectMatcher;
    useClass: typeof ObjectMatcher;
    deps: import("../static.injector/injection_token").InjectionToken<import("./object-matcher.type").IObjectMatcher[]>[];
    useExisting?: undefined;
} | {
    provide: typeof POJOMatcher;
    useClass: typeof POJOMatcher;
    deps: (typeof ObjectMapProvider | typeof MapMatcher)[];
    useExisting?: undefined;
} | {
    provide: typeof PrimitiveMatcher;
    useClass: typeof PrimitiveMatcher;
    deps: any[];
    useExisting?: undefined;
} | {
    provide: typeof ObjectMapProvider;
    useClass: typeof ObjectMapProvider;
    deps: any[];
    useExisting?: undefined;
} | {
    provide: typeof MapMatcher;
    useClass: typeof MapMatcher;
    deps: (typeof Injector)[];
    useExisting?: undefined;
})[];
/**
 * @hidden
 */
export default _default;
