/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { InjectionToken } from "./injection_token";
import { Injector } from "./injector";
/**
 * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.
 *
 * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a
 * project.
 *
 * @publicApi
 */
export declare const INJECTOR: InjectionToken<Injector>;
export declare const THROW_IF_NOT_FOUND: {};
export declare const NG_TEMP_TOKEN_PATH = "ngTempTokenPath";
export declare const NO_NEW_LINE = "\u0275";
export declare const SOURCE = "__source";
export declare const USE_VALUE: string;
export declare class NullInjector implements Injector {
    get(token: any, notFoundValue?: any): any;
}
export declare function catchInjectorError(e: any, token: any, injectorErrorName: string, source: string | null): never;
export declare function formatError(text: string, obj: any, injectorErrorName: string, source?: string | null): string;
