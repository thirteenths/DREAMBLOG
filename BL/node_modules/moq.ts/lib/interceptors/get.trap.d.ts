import { PropertiesValueStorage } from "./properties-value.storage";
import { SpyFunctionProvider } from "./spy-function.provider";
import { InteractionPlayer } from "../interaction-players/interaction.player";
import { HasPropertyExplorer } from "../explorers/has-property.explorer/has-property.explorer";
import { HasMethodExplorer } from "../explorers/has-method.explorer/has-method.explorer";
import { Tracker } from "../tracker/tracker";
import { TypeofInjectionToken } from "../injector/typeof-injection-token";
import { MOCK } from "../injector/mock.injection-token";
/**
 * @hidden
 */
export declare class GetTrap {
    private mock;
    private tracker;
    private propertiesValueStorage;
    private interactionPlayer;
    private hasPropertyExplorer;
    private hasMethodExplorer;
    private spyFunctionProvider;
    constructor(mock: TypeofInjectionToken<typeof MOCK>, tracker: Tracker, propertiesValueStorage: PropertiesValueStorage, interactionPlayer: InteractionPlayer, hasPropertyExplorer: HasPropertyExplorer, hasMethodExplorer: HasMethodExplorer, spyFunctionProvider: SpyFunctionProvider);
    intercept(property: PropertyKey): any;
}
